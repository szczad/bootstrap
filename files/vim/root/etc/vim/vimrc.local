" Install vim-plug if missing
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" This installs YouCompleteMe with custom arguments but only if installation
" is forced when updating the plugin
function! BuildYCM(info)
  if a:info.status == 'installed' || a:info.force
    !./install.py --go-completer --java-completer --clangd-completer --ts-completer --cs-completer
  endif
endfunction

" Plugin list
call plug#begin('~/.vim/plugged')
Plug 'Shougo/denite.nvim'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'airblade/vim-gitgutter'
Plug 'flazz/vim-colorschemes'
Plug 'hashivim/vim-terraform'
Plug 'jmcantrell/vim-virtualenv'
Plug 'martinda/Jenkinsfile-vim-syntax'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'ycm-core/YouCompleteMe', { 'do': function('BuildYCM') }
call plug#end()

colorscheme Benokai

set ttymouse=xterm2
set mouse=a
set expandtab
set ts=2
set shiftwidth=2
set autoindent
set smartindent
set laststatus=2
set number
set directory=~/.vim/swap,.,~/.tmp,/var/tmp,/tmp
set previewheight=20
set colorcolumn=110
" Mac OS X specific settings - allow deletion using backspace and delete
if has("mac")
  echom 'Using mac style backspace'
  set backspace=indent,eol,start
else
  echom 'Using linux style backspace'
endif


" Custom
noremap <F5> :edit<CR>
vnoremap <C-\> <Plug>Commentary

" Airline w/Powerline
let g:airline_powerline_fonts = 1
" let g:airline_section_z = airline#section#create(['windowswap', '%3p%% ', 'linenr', ':%3v'])
" let g:airline_skip_empty_sections = 1
let  g:airline_theme = 'aurora'

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"

" NERDTree
map <C-N> :NERDTreeFocus<CR>
map <C-N><C-N> :NERDTreeToggle<CR>
let g:NERDTreeWinSize=25
let g:NERDTreeShowHidden=1
"let g:NERDTreeNodeDelimiter = "\u00a0" 
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Vim Fugitive
" Ctrl+G codes
map <C-G>s :Gstatus<CR>
map <C-G>a :Gwrite<CR>
map <C-G>P :Gpush<CR>
map <C-G>p :Gpull<CR>
map <C-G>l :Glog<CR>
map <C-G>d :Gvdiff<CR>

" Function keys mapping
map <F2> :Gstatus<CR>

